<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skeqi.htd.po.mapper.SaleOrderMapper">
    <insert id="createOrders">
<!--        <foreach collection="list" item="item" open="" close="" separator=";">-->
            insert into t_sale_order(
            `order_no`,
            `sub_order_no`,
            `ex_order_no`,
            `order_time`,
            `delivery_time`,
            `product_id`,
            `product`,
            `brand`,
            `product_sku`,
            `product_ext`,
            `due_account`,
            `customer_id`,
            `customer`,
            `seller_id`,
            `seller`,
            `materials`,
            `order_state`,
            `audit_state`,
            `stock_state`,
            `creator`,
            `has_tax`,
            `sub_warehouse`,
            `remark`
            )
            VALUES (#{item.orderNo}, #{item.subOrderNo}, #{item.exOrderNo}, #{item.orderTime}, #{item.deliveryTime},
            #{item.productId}, #{item.product},#{item.brand},#{item.productSku},#{item.productExt},
            #{item.dueAccount},#{item.customerId},#{item.customer},#{item.sellerId},#{item.seller},
            #{item.materials},#{item.orderState},#{item.auditState},#{item.stockState},#{item.creator},
            #{item.hasTax},#{item.subWarehouse},#{item.remark}
            );
<!--        </foreach>-->
    </insert>
    <update id="updateAuditStateByExOrderNo">
        update t_sale_order
        set audit_state = #{auditState}
        where ex_order_no = #{exOrderNo}
    </update>

    <select id="listOrdersBy" resultType="com.skeqi.htd.po.entity.SaleOrder">
        select id as id,
        order_no as orderNo,
        sub_order_no as subOrderNo,
        ex_order_no as exOrderNo,
        order_time as orderTime,
        delivery_time as deliveryTime,
        cancel_time as cancelTime,
        product_id as productId,
        product as product,
        brand as brand,
        product_sku as productSku,
        product_ext as productExt,
        due_account as dueAccount,
        materials as materials,
        order_state as orderState,
        audit_state as auditState,
        stock_state as stockState,
        creator as creator,
        has_tax as hasTax,
        sub_warehouse as subWarehouse,
        remark as remark,
        create_time as createTime,
        update_time as updateTime
        from t_sale_order
        where deleted = 0
        <if test="vo.exOrderNo != null">and ex_order_no = #{vo.exOrderNo}</if>
        <if test="vo.orderTimeRange != null">and (order_time &lt; #{vo.orderTimeRange[1]} and order_time >=
            #{vo.orderTimeRange[0]})
        </if>
        <if test="vo.deliveryTimeRange != null">and (delivery_time &lt; #{vo.deliveryTimeRange[1]} and delivery_time >=
            #{vo.deliveryTimeRange[0]})
        </if>
        <if test="vo.cancelTimeRange != null">and (cancel_time &lt; #{vo.cancelTimeRange[1]} and cancel_time >=
            #{vo.cancelTimeRange[0]})
        </if>
        <if test="vo.customer != null">and customer = #{vo.customer}</if>
        <if test="vo.seller != null">and seller = #{vo.seller}</if>
        <if test="vo.auditState != null">and audit_state = #{vo.auditState}</if>
        <if test="vo.orderState != null">and order_state = #{vo.orderState}</if>
        <if test="vo.stockState != null">and stock_state = #{vo.stockState}</if>
        <if test="vo.hasTax != null">and has_tax = #{vo.hasTax}</if>
        <if test="vo.subWarehouse != null">and sub_warehouse = #{vo.subWarehouse}</if>
        <if test="vo.creator != null">and creator = #{vo.creator}</if>
        <if test="vo.brand != null">and brand = #{vo.brand}</if>

    </select>
    <select id="selectCountByExOrderNo" resultType="java.lang.Integer">
        select count(1)
        from t_sale_order
        where deleted = 0
          and ex_order_no = #{exOrderNo}
    </select>
</mapper>
