<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skeqi.mes.mapper.wf.linesidelibrary.CLslMaterialRequestDetailTMapper">

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    ID, cdt, udt, rockId, materialNo, materialName, requiredQuantity,billNo
  </sql>

    <select id="findMaterialRequestDetailByRequestId"
            resultType="com.skeqi.mes.pojo.wf.linesidelibrary.CLslMaterialRequestDetailT">
      select
      rd.ID, rd.cdt, rd.udt, rd.rockId, rd.materialNo, rd.materialName, rd.requiredQuantity,rd.billNo,if(sum(mr.quantity)=0,null,sum(mr.quantity)) as sumQuantity,rd.tracesType,rock.rockNo,rock.rackNo
      from c_lsl_material_request_detail_t rd
      left join r_lsl_material_response_t mr
      on rd.ID = mr.requestDetailId
      left join c_lsl_rock_t rock
      on rock.ID = rd.rockId
      where rd.billNo = #{billNo,jdbcType=INTEGER}
      group by rd.ID
    </select>

  <insert id="insertMultiple">
      insert into c_lsl_material_request_detail_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      cdt, udt, rockId, materialNo, materialName, requiredQuantity,billNo,tracesType
    </trim>
    values
    <foreach collection="list"  item="item" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        #{item.cdt,jdbcType=TIMESTAMP},

        #{item.udt,jdbcType=TIMESTAMP},

        #{item.rockId,jdbcType=INTEGER},

        #{item.materialNo,jdbcType=VARCHAR},

        #{item.materialName,jdbcType=VARCHAR},

        #{item.requiredQuantity,jdbcType=INTEGER},

        #{item.billNo,jdbcType=VARCHAR},

        #{item.tracesType,jdbcType=VARCHAR},
      </trim>
    </foreach>
  </insert>
</mapper>
